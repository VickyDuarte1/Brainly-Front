{"ast":null,"code":"import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n  if (!(cek instanceof Uint8Array)) {\n    throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n  }\n  const keySize = parseInt(enc.slice(1, 4), 10);\n  const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n  const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n    hash: `SHA-${keySize << 1}`,\n    name: 'HMAC'\n  }, false, ['sign']);\n  const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n    iv,\n    name: 'AES-CBC'\n  }, encKey, plaintext));\n  const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n  const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n  return {\n    ciphertext,\n    tag\n  };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n  let encKey;\n  if (cek instanceof Uint8Array) {\n    encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n  } else {\n    checkEncCryptoKey(cek, enc, 'encrypt');\n    encKey = cek;\n  }\n  const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n    additionalData: aad,\n    iv,\n    name: 'AES-GCM',\n    tagLength: 128\n  }, encKey, plaintext));\n  const tag = encrypted.slice(-16);\n  const ciphertext = encrypted.slice(0, -16);\n  return {\n    ciphertext,\n    tag\n  };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n  if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n    throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n  }\n  checkIvLength(enc, iv);\n  switch (enc) {\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      if (cek instanceof Uint8Array) checkCekLength(cek, parseInt(enc.slice(-3), 10));\n      return cbcEncrypt(enc, plaintext, cek, iv, aad);\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      if (cek instanceof Uint8Array) checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n      return gcmEncrypt(enc, plaintext, cek, iv, aad);\n    default:\n      throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n  }\n};\nexport default encrypt;","map":{"version":3,"names":["concat","uint64be","checkIvLength","checkCekLength","crypto","isCryptoKey","checkEncCryptoKey","invalidKeyInput","JOSENotSupported","types","cbcEncrypt","enc","plaintext","cek","iv","aad","Uint8Array","TypeError","keySize","parseInt","slice","encKey","subtle","importKey","subarray","macKey","hash","name","ciphertext","encrypt","macData","length","tag","sign","gcmEncrypt","encrypted","additionalData","tagLength"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/runtime/encrypt.js"],"sourcesContent":["import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n        iv,\n        name: 'AES-CBC',\n    }, encKey, plaintext));\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    return { ciphertext, tag };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'encrypt');\n        encKey = cek;\n    }\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: 'AES-GCM',\n        tagLength: 128,\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return { ciphertext, tag };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default encrypt;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}