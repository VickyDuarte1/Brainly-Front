{"ast":null,"code":"import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n  if (typeof value !== 'string' || !value) {\n    throw new JWKInvalid(`${description} missing or invalid`);\n  }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\n  if (!isObject(jwk)) {\n    throw new TypeError('JWK must be an object');\n  }\n  digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = 'sha256';\n  if (digestAlgorithm !== 'sha256' && digestAlgorithm !== 'sha384' && digestAlgorithm !== 'sha512') {\n    throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n  }\n  let components;\n  switch (jwk.kty) {\n    case 'EC':\n      check(jwk.crv, '\"crv\" (Curve) Parameter');\n      check(jwk.x, '\"x\" (X Coordinate) Parameter');\n      check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n      components = {\n        crv: jwk.crv,\n        kty: jwk.kty,\n        x: jwk.x,\n        y: jwk.y\n      };\n      break;\n    case 'OKP':\n      check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n      check(jwk.x, '\"x\" (Public Key) Parameter');\n      components = {\n        crv: jwk.crv,\n        kty: jwk.kty,\n        x: jwk.x\n      };\n      break;\n    case 'RSA':\n      check(jwk.e, '\"e\" (Exponent) Parameter');\n      check(jwk.n, '\"n\" (Modulus) Parameter');\n      components = {\n        e: jwk.e,\n        kty: jwk.kty,\n        n: jwk.n\n      };\n      break;\n    case 'oct':\n      check(jwk.k, '\"k\" (Key Value) Parameter');\n      components = {\n        k: jwk.k,\n        kty: jwk.kty\n      };\n      break;\n    default:\n      throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n  }\n  const data = encoder.encode(JSON.stringify(components));\n  return base64url(await digest(digestAlgorithm, data));\n}\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n  digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = 'sha256';\n  const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n  return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}","map":{"version":3,"names":["digest","encode","base64url","JOSENotSupported","JWKInvalid","encoder","isObject","check","value","description","calculateJwkThumbprint","jwk","digestAlgorithm","TypeError","components","kty","crv","x","y","e","n","k","data","JSON","stringify","calculateJwkThumbprintUri","thumbprint","slice"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/jwk/thumbprint.js"],"sourcesContent":["import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}