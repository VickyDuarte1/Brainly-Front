{"ast":null,"code":"import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n  if (jwe instanceof Uint8Array) {\n    jwe = decoder.decode(jwe);\n  }\n  if (typeof jwe !== 'string') {\n    throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n  }\n  const {\n    0: protectedHeader,\n    1: encryptedKey,\n    2: iv,\n    3: ciphertext,\n    4: tag,\n    length\n  } = jwe.split('.');\n  if (length !== 5) {\n    throw new JWEInvalid('Invalid Compact JWE');\n  }\n  const decrypted = await flattenedDecrypt({\n    ciphertext,\n    iv: iv || undefined,\n    protected: protectedHeader || undefined,\n    tag: tag || undefined,\n    encrypted_key: encryptedKey || undefined\n  }, key, options);\n  const result = {\n    plaintext: decrypted.plaintext,\n    protectedHeader: decrypted.protectedHeader\n  };\n  if (typeof key === 'function') {\n    return {\n      ...result,\n      key: decrypted.key\n    };\n  }\n  return result;\n}","map":{"version":3,"names":["flattenedDecrypt","JWEInvalid","decoder","compactDecrypt","jwe","key","options","Uint8Array","decode","protectedHeader","encryptedKey","iv","ciphertext","tag","length","split","decrypted","undefined","protected","encrypted_key","result","plaintext"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/jwe/compact/decrypt.js"],"sourcesContent":["import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext,\n        iv: (iv || undefined),\n        protected: protectedHeader || undefined,\n        tag: (tag || undefined),\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,OAAO,eAAeC,cAAcA,CAACC,GAAG,EAAEC,GAAG,EAAEC,OAAO,EAAE;EACpD,IAAIF,GAAG,YAAYG,UAAU,EAAE;IAC3BH,GAAG,GAAGF,OAAO,CAACM,MAAM,CAACJ,GAAG,CAAC;EAC7B;EACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACzB,MAAM,IAAIH,UAAU,CAAC,4CAA4C,CAAC;EACtE;EACA,MAAM;IAAE,CAAC,EAAEQ,eAAe;IAAE,CAAC,EAAEC,YAAY;IAAE,CAAC,EAAEC,EAAE;IAAE,CAAC,EAAEC,UAAU;IAAE,CAAC,EAAEC,GAAG;IAAEC;EAAQ,CAAC,GAAGV,GAAG,CAACW,KAAK,CAAC,GAAG,CAAC;EACrG,IAAID,MAAM,KAAK,CAAC,EAAE;IACd,MAAM,IAAIb,UAAU,CAAC,qBAAqB,CAAC;EAC/C;EACA,MAAMe,SAAS,GAAG,MAAMhB,gBAAgB,CAAC;IACrCY,UAAU;IACVD,EAAE,EAAGA,EAAE,IAAIM,SAAU;IACrBC,SAAS,EAAET,eAAe,IAAIQ,SAAS;IACvCJ,GAAG,EAAGA,GAAG,IAAII,SAAU;IACvBE,aAAa,EAAET,YAAY,IAAIO;EACnC,CAAC,EAAEZ,GAAG,EAAEC,OAAO,CAAC;EAChB,MAAMc,MAAM,GAAG;IAAEC,SAAS,EAAEL,SAAS,CAACK,SAAS;IAAEZ,eAAe,EAAEO,SAAS,CAACP;EAAgB,CAAC;EAC7F,IAAI,OAAOJ,GAAG,KAAK,UAAU,EAAE;IAC3B,OAAO;MAAE,GAAGe,MAAM;MAAEf,GAAG,EAAEW,SAAS,CAACX;IAAI,CAAC;EAC5C;EACA,OAAOe,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}