{"ast":null,"code":"import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n  let controller;\n  let id;\n  let timedOut = false;\n  if (typeof AbortController === 'function') {\n    controller = new AbortController();\n    id = setTimeout(() => {\n      timedOut = true;\n      controller.abort();\n    }, timeout);\n  }\n  const response = await fetch(url.href, {\n    signal: controller ? controller.signal : undefined,\n    redirect: 'manual',\n    headers: options.headers\n  }).catch(err => {\n    if (timedOut) throw new JWKSTimeout();\n    throw err;\n  });\n  if (id !== undefined) clearTimeout(id);\n  if (response.status !== 200) {\n    throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n  }\n  try {\n    return await response.json();\n  } catch (_a) {\n    throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n  }\n};\nexport default fetchJwks;","map":{"version":3,"names":["JOSEError","JWKSTimeout","fetchJwks","url","timeout","options","controller","id","timedOut","AbortController","setTimeout","abort","response","fetch","href","signal","undefined","redirect","headers","catch","err","clearTimeout","status","json","_a"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/runtime/fetch_jwks.js"],"sourcesContent":["import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch (_a) {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,mBAAmB;AAC1D,MAAMC,SAAS,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,EAAEC,OAAO,KAAK;EAC/C,IAAIC,UAAU;EACd,IAAIC,EAAE;EACN,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAI,OAAOC,eAAe,KAAK,UAAU,EAAE;IACvCH,UAAU,GAAG,IAAIG,eAAe,EAAE;IAClCF,EAAE,GAAGG,UAAU,CAAC,MAAM;MAClBF,QAAQ,GAAG,IAAI;MACfF,UAAU,CAACK,KAAK,EAAE;IACtB,CAAC,EAAEP,OAAO,CAAC;EACf;EACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,CAACW,IAAI,EAAE;IACnCC,MAAM,EAAET,UAAU,GAAGA,UAAU,CAACS,MAAM,GAAGC,SAAS;IAClDC,QAAQ,EAAE,QAAQ;IAClBC,OAAO,EAAEb,OAAO,CAACa;EACrB,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;IACd,IAAIZ,QAAQ,EACR,MAAM,IAAIP,WAAW,EAAE;IAC3B,MAAMmB,GAAG;EACb,CAAC,CAAC;EACF,IAAIb,EAAE,KAAKS,SAAS,EAChBK,YAAY,CAACd,EAAE,CAAC;EACpB,IAAIK,QAAQ,CAACU,MAAM,KAAK,GAAG,EAAE;IACzB,MAAM,IAAItB,SAAS,CAAC,yDAAyD,CAAC;EAClF;EACA,IAAI;IACA,OAAO,MAAMY,QAAQ,CAACW,IAAI,EAAE;EAChC,CAAC,CACD,OAAOC,EAAE,EAAE;IACP,MAAM,IAAIxB,SAAS,CAAC,4DAA4D,CAAC;EACrF;AACJ,CAAC;AACD,eAAeE,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}