{"ast":null,"code":"import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n  if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n    throw new TypeError(`Invalid key size for alg: ${alg}`);\n  }\n}\nfunction getCryptoKey(key, alg, usage) {\n  if (isCryptoKey(key)) {\n    checkEncCryptoKey(key, alg, usage);\n    return key;\n  }\n  if (key instanceof Uint8Array) {\n    return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n  }\n  throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = async (alg, key, cek) => {\n  const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n  checkKeySize(cryptoKey, alg);\n  const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n  return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n  const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n  checkKeySize(cryptoKey, alg);\n  const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n  return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};","map":{"version":3,"names":["bogusWebCrypto","crypto","isCryptoKey","checkEncCryptoKey","invalidKeyInput","types","checkKeySize","key","alg","algorithm","length","parseInt","slice","TypeError","getCryptoKey","usage","Uint8Array","subtle","importKey","wrap","cek","cryptoKey","cryptoKeyCek","wrapKey","unwrap","encryptedKey","unwrapKey","exportKey"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/runtime/aeskw.js"],"sourcesContent":["import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey(key, alg, usage) {\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = async (alg, key, cek) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,YAAY;AACvC,OAAOC,MAAM,IAAIC,WAAW,QAAQ,gBAAgB;AACpD,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,SAASC,KAAK,QAAQ,kBAAkB;AACxC,SAASC,YAAYA,CAACC,GAAG,EAAEC,GAAG,EAAE;EAC5B,IAAID,GAAG,CAACE,SAAS,CAACC,MAAM,KAAKC,QAAQ,CAACH,GAAG,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;IACxD,MAAM,IAAIC,SAAS,CAAE,6BAA4BL,GAAI,EAAC,CAAC;EAC3D;AACJ;AACA,SAASM,YAAYA,CAACP,GAAG,EAAEC,GAAG,EAAEO,KAAK,EAAE;EACnC,IAAIb,WAAW,CAACK,GAAG,CAAC,EAAE;IAClBJ,iBAAiB,CAACI,GAAG,EAAEC,GAAG,EAAEO,KAAK,CAAC;IAClC,OAAOR,GAAG;EACd;EACA,IAAIA,GAAG,YAAYS,UAAU,EAAE;IAC3B,OAAOf,MAAM,CAACgB,MAAM,CAACC,SAAS,CAAC,KAAK,EAAEX,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAACQ,KAAK,CAAC,CAAC;EACvE;EACA,MAAM,IAAIF,SAAS,CAACT,eAAe,CAACG,GAAG,EAAE,GAAGF,KAAK,EAAE,YAAY,CAAC,CAAC;AACrE;AACA,OAAO,MAAMc,IAAI,GAAG,MAAAA,CAAOX,GAAG,EAAED,GAAG,EAAEa,GAAG,KAAK;EACzC,MAAMC,SAAS,GAAG,MAAMP,YAAY,CAACP,GAAG,EAAEC,GAAG,EAAE,SAAS,CAAC;EACzDF,YAAY,CAACe,SAAS,EAAEb,GAAG,CAAC;EAC5B,MAAMc,YAAY,GAAG,MAAMrB,MAAM,CAACgB,MAAM,CAACC,SAAS,CAAC,KAAK,EAAEE,GAAG,EAAE,GAAGpB,cAAc,CAAC;EACjF,OAAO,IAAIgB,UAAU,CAAC,MAAMf,MAAM,CAACgB,MAAM,CAACM,OAAO,CAAC,KAAK,EAAED,YAAY,EAAED,SAAS,EAAE,QAAQ,CAAC,CAAC;AAChG,CAAC;AACD,OAAO,MAAMG,MAAM,GAAG,MAAAA,CAAOhB,GAAG,EAAED,GAAG,EAAEkB,YAAY,KAAK;EACpD,MAAMJ,SAAS,GAAG,MAAMP,YAAY,CAACP,GAAG,EAAEC,GAAG,EAAE,WAAW,CAAC;EAC3DF,YAAY,CAACe,SAAS,EAAEb,GAAG,CAAC;EAC5B,MAAMc,YAAY,GAAG,MAAMrB,MAAM,CAACgB,MAAM,CAACS,SAAS,CAAC,KAAK,EAAED,YAAY,EAAEJ,SAAS,EAAE,QAAQ,EAAE,GAAGrB,cAAc,CAAC;EAC/G,OAAO,IAAIgB,UAAU,CAAC,MAAMf,MAAM,CAACgB,MAAM,CAACU,SAAS,CAAC,KAAK,EAAEL,YAAY,CAAC,CAAC;AAC7E,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}