{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rama_\\\\Desktop\\\\vicky uni\\\\Henrry Prep Course\\\\otrom2\\\\Brainly-Front\\\\client\\\\src\\\\Components\\\\Doctors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getDoctors } from \"../Redux/actions\";\nimport Doctor from './Doctor';\nimport SearchBar from './SearchBar';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Doctors() {\n  _s();\n  const dispatch = useDispatch();\n  const doctors = useSelector(state => state.doctors);\n  const [selectedOption, setSelectedOption] = useState(\"asc\");\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedSpeciality, setSelectedSpeciality] = useState(\"\");\n  const handleSelectChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  const handleSearch = term => {\n    setSearchTerm(term);\n  };\n  const handleClearFilters = () => {\n    setSelectedOption(\"asc\");\n    setSearchTerm(\"\");\n  };\n  const handleSpecialityChange = event => {\n    setSelectedSpeciality(event.target.value);\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.name.includes(searchTerm) && (selectedSpeciality === \"\" || doctor.speciality === selectedSpeciality));\n  const sortedDoctors = filteredDoctors.length > 0 ? filteredDoctors.sort((a, b) => {\n    if (selectedOption === \"asc\") {\n      return a.name.localeCompare(b.name);\n    } else {\n      return b.name.localeCompare(a.name);\n    }\n  }) : filteredDoctors;\n  useEffect(() => {\n    dispatch(getDoctors());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Ordenar por nombre:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedOption,\n        onChange: handleSelectChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \"Ascendente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"desc\",\n          children: \"Descendente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Especialidad:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSpeciality,\n        onChange: handleSpecialityChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Todas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"clinic\",\n          children: \"clinic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"neurologist\",\n          children: \"neurologist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"neurosurgeon\",\n          children: \"neurosurgeon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/home`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Back Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearFilters,\n      children: \"Clean filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), doctors.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No hay doctores disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Doctors List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), sortedDoctors.map(doctor => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/doctors/${doctor.id}`,\n        children: /*#__PURE__*/_jsxDEV(Doctor, {\n          name: doctor.name,\n          email: doctor.email,\n          address: doctor.address,\n          phone: doctor.phone,\n          speciality: doctor.speciality\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, doctor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Doctors, \"H8qbwkwIV2Q9l+3iisF3O3EQ5P0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Doctors;\nvar _c;\n$RefreshReg$(_c, \"Doctors\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","getDoctors","Doctor","SearchBar","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Doctors","_s","dispatch","doctors","state","selectedOption","setSelectedOption","searchTerm","setSearchTerm","selectedSpeciality","setSelectedSpeciality","handleSelectChange","event","target","value","handleSearch","term","handleClearFilters","handleSpecialityChange","filteredDoctors","filter","doctor","name","includes","speciality","sortedDoctors","length","sort","a","b","localeCompare","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onChange","to","onClick","map","id","email","address","phone","_c","$RefreshReg$"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/src/Components/Doctors.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getDoctors } from \"../Redux/actions\";\r\nimport Doctor from './Doctor';\r\nimport SearchBar from './SearchBar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Doctors() {\r\n\r\n  const dispatch = useDispatch();\r\n  const doctors = useSelector((state) => state.doctors);\r\n  const [selectedOption, setSelectedOption] = useState(\"asc\");\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedSpeciality, setSelectedSpeciality] = useState(\"\");\r\n  const handleSelectChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  }\r\n  const handleSearch = (term) => {\r\n    setSearchTerm(term);\r\n  }\r\n  const handleClearFilters = () => {\r\n    setSelectedOption(\"asc\");\r\n    setSearchTerm(\"\");\r\n  }\r\n  const handleSpecialityChange = (event) => {\r\n    setSelectedSpeciality(event.target.value);\r\n  }\r\n\r\n  \r\nconst filteredDoctors = doctors.filter(doctor =>\r\n    doctor.name.includes(searchTerm) &&\r\n    (selectedSpeciality === \"\" || doctor.speciality === selectedSpeciality)\r\n  );\r\n  \r\n  const sortedDoctors = filteredDoctors.length > 0 ? filteredDoctors.sort((a, b) => {\r\n    \r\n    if (selectedOption === \"asc\") {\r\n      return a.name.localeCompare(b.name);\r\n    } else {\r\n      return b.name.localeCompare(a.name);\r\n    }\r\n  }) : filteredDoctors;\r\n\r\n  useEffect(() => {\r\n    dispatch(getDoctors());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n\r\n    <div>\r\n        \r\n      <SearchBar onSearch={handleSearch}/>\r\n      <label>\r\n        Ordenar por nombre:\r\n        <select value={selectedOption} onChange={handleSelectChange}>\r\n          <option value=\"asc\">Ascendente</option>\r\n          <option value=\"desc\">Descendente</option>\r\n        </select>\r\n      </label>\r\n      \r\n<label>\r\n  Especialidad:\r\n  <select value={selectedSpeciality} onChange={handleSpecialityChange}>\r\n    <option value=\"\">Todas</option>\r\n    <option value=\"clinic\">clinic</option>\r\n    <option value=\"neurologist\">neurologist</option>\r\n    <option value=\"neurosurgeon\">neurosurgeon</option>\r\n    \r\n  </select>\r\n</label>\r\n\r\n<Link to={`/home`}>\r\n     <button> Back Home</button>\r\n</Link>     \r\n\r\n      <button onClick={handleClearFilters}>Clean filters</button>\r\n      \r\n      {doctors.length === 0 ? (\r\n      <div>No hay doctores disponibles</div>\r\n    ) : (\r\n      <>\r\n        <div>Doctors List:</div>\r\n        {sortedDoctors.map((doctor) => (\r\n          <Link key={doctor.id} to={`/doctors/${doctor.id}`}>\r\n            <Doctor \r\n            name={doctor.name}\r\n            email={doctor.email}\r\n            address={doctor.address}\r\n            phone={doctor.phone}\r\n            speciality={doctor.speciality}\r\n            \r\n            />\r\n          </Link>\r\n        ))}\r\n      </>\r\n    )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}