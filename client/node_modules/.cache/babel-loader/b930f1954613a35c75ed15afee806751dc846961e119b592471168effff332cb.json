{"ast":null,"code":"import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n  constructor(payload) {\n    this._flattened = new FlattenedSign(payload);\n  }\n  setProtectedHeader(protectedHeader) {\n    this._flattened.setProtectedHeader(protectedHeader);\n    return this;\n  }\n  async sign(key, options) {\n    const jws = await this._flattened.sign(key, options);\n    if (jws.payload === undefined) {\n      throw new TypeError('use the flattened module for creating JWS with b64: false');\n    }\n    return `${jws.protected}.${jws.payload}.${jws.signature}`;\n  }\n}","map":{"version":3,"names":["FlattenedSign","CompactSign","constructor","payload","_flattened","setProtectedHeader","protectedHeader","sign","key","options","jws","undefined","TypeError","protected","signature"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/jws/compact/sign.js"],"sourcesContent":["import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,sBAAsB;AACpD,OAAO,MAAMC,WAAW,CAAC;EACrBC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,UAAU,GAAG,IAAIJ,aAAa,CAACG,OAAO,CAAC;EAChD;EACAE,kBAAkBA,CAACC,eAAe,EAAE;IAChC,IAAI,CAACF,UAAU,CAACC,kBAAkB,CAACC,eAAe,CAAC;IACnD,OAAO,IAAI;EACf;EACA,MAAMC,IAAIA,CAACC,GAAG,EAAEC,OAAO,EAAE;IACrB,MAAMC,GAAG,GAAG,MAAM,IAAI,CAACN,UAAU,CAACG,IAAI,CAACC,GAAG,EAAEC,OAAO,CAAC;IACpD,IAAIC,GAAG,CAACP,OAAO,KAAKQ,SAAS,EAAE;MAC3B,MAAM,IAAIC,SAAS,CAAC,2DAA2D,CAAC;IACpF;IACA,OAAQ,GAAEF,GAAG,CAACG,SAAU,IAAGH,GAAG,CAACP,OAAQ,IAAGO,GAAG,CAACI,SAAU,EAAC;EAC7D;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}