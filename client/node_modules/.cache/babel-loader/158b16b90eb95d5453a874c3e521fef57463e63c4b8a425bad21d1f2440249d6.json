{"ast":null,"code":"import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n  if (jws instanceof Uint8Array) {\n    jws = decoder.decode(jws);\n  }\n  if (typeof jws !== 'string') {\n    throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n  }\n  const {\n    0: protectedHeader,\n    1: payload,\n    2: signature,\n    length\n  } = jws.split('.');\n  if (length !== 3) {\n    throw new JWSInvalid('Invalid Compact JWS');\n  }\n  const verified = await flattenedVerify({\n    payload,\n    protected: protectedHeader,\n    signature\n  }, key, options);\n  const result = {\n    payload: verified.payload,\n    protectedHeader: verified.protectedHeader\n  };\n  if (typeof key === 'function') {\n    return {\n      ...result,\n      key: verified.key\n    };\n  }\n  return result;\n}","map":{"version":3,"names":["flattenedVerify","JWSInvalid","decoder","compactVerify","jws","key","options","Uint8Array","decode","protectedHeader","payload","signature","length","split","verified","protected","result"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/jws/compact/verify.js"],"sourcesContent":["import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,wBAAwB;AACxD,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,OAAO,eAAeC,aAAaA,CAACC,GAAG,EAAEC,GAAG,EAAEC,OAAO,EAAE;EACnD,IAAIF,GAAG,YAAYG,UAAU,EAAE;IAC3BH,GAAG,GAAGF,OAAO,CAACM,MAAM,CAACJ,GAAG,CAAC;EAC7B;EACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACzB,MAAM,IAAIH,UAAU,CAAC,4CAA4C,CAAC;EACtE;EACA,MAAM;IAAE,CAAC,EAAEQ,eAAe;IAAE,CAAC,EAAEC,OAAO;IAAE,CAAC,EAAEC,SAAS;IAAEC;EAAO,CAAC,GAAGR,GAAG,CAACS,KAAK,CAAC,GAAG,CAAC;EAC/E,IAAID,MAAM,KAAK,CAAC,EAAE;IACd,MAAM,IAAIX,UAAU,CAAC,qBAAqB,CAAC;EAC/C;EACA,MAAMa,QAAQ,GAAG,MAAMd,eAAe,CAAC;IAAEU,OAAO;IAAEK,SAAS,EAAEN,eAAe;IAAEE;EAAU,CAAC,EAAEN,GAAG,EAAEC,OAAO,CAAC;EACxG,MAAMU,MAAM,GAAG;IAAEN,OAAO,EAAEI,QAAQ,CAACJ,OAAO;IAAED,eAAe,EAAEK,QAAQ,CAACL;EAAgB,CAAC;EACvF,IAAI,OAAOJ,GAAG,KAAK,UAAU,EAAE;IAC3B,OAAO;MAAE,GAAGW,MAAM;MAAEX,GAAG,EAAES,QAAQ,CAACT;IAAI,CAAC;EAC3C;EACA,OAAOW,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}