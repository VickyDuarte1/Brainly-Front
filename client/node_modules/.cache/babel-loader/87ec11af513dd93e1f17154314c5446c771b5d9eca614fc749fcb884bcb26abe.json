{"ast":null,"code":"import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalVerify(jws, key, options) {\n  if (!isObject(jws)) {\n    throw new JWSInvalid('General JWS must be an object');\n  }\n  if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n    throw new JWSInvalid('JWS Signatures missing or incorrect type');\n  }\n  for (const signature of jws.signatures) {\n    try {\n      return await flattenedVerify({\n        header: signature.header,\n        payload: jws.payload,\n        protected: signature.protected,\n        signature: signature.signature\n      }, key, options);\n    } catch (_a) {}\n  }\n  throw new JWSSignatureVerificationFailed();\n}","map":{"version":3,"names":["flattenedVerify","JWSInvalid","JWSSignatureVerificationFailed","isObject","generalVerify","jws","key","options","Array","isArray","signatures","every","signature","header","payload","protected","_a"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/jws/general/verify.js"],"sourcesContent":["import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n        throw new JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await flattenedVerify({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWSSignatureVerificationFailed();\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,wBAAwB;AACxD,SAASC,UAAU,EAAEC,8BAA8B,QAAQ,sBAAsB;AACjF,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAO,eAAeC,aAAaA,CAACC,GAAG,EAAEC,GAAG,EAAEC,OAAO,EAAE;EACnD,IAAI,CAACJ,QAAQ,CAACE,GAAG,CAAC,EAAE;IAChB,MAAM,IAAIJ,UAAU,CAAC,+BAA+B,CAAC;EACzD;EACA,IAAI,CAACO,KAAK,CAACC,OAAO,CAACJ,GAAG,CAACK,UAAU,CAAC,IAAI,CAACL,GAAG,CAACK,UAAU,CAACC,KAAK,CAACR,QAAQ,CAAC,EAAE;IACnE,MAAM,IAAIF,UAAU,CAAC,0CAA0C,CAAC;EACpE;EACA,KAAK,MAAMW,SAAS,IAAIP,GAAG,CAACK,UAAU,EAAE;IACpC,IAAI;MACA,OAAO,MAAMV,eAAe,CAAC;QACzBa,MAAM,EAAED,SAAS,CAACC,MAAM;QACxBC,OAAO,EAAET,GAAG,CAACS,OAAO;QACpBC,SAAS,EAAEH,SAAS,CAACG,SAAS;QAC9BH,SAAS,EAAEA,SAAS,CAACA;MACzB,CAAC,EAAEN,GAAG,EAAEC,OAAO,CAAC;IACpB,CAAC,CACD,OAAOS,EAAE,EAAE,CACX;EACJ;EACA,MAAM,IAAId,8BAA8B,EAAE;AAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}