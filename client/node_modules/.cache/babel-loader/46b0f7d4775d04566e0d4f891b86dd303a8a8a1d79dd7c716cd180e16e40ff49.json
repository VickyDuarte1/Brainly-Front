{"ast":null,"code":"import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n  const cryptoKey = await getVerifyKey(alg, key, 'verify');\n  checkKeyLength(alg, cryptoKey);\n  const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n  try {\n    return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n  } catch (_a) {\n    return false;\n  }\n};\nexport default verify;","map":{"version":3,"names":["subtleAlgorithm","crypto","checkKeyLength","getVerifyKey","verify","alg","key","signature","data","cryptoKey","algorithm","subtle","_a"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/runtime/verify.js"],"sourcesContent":["import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch (_a) {\n        return false;\n    }\n};\nexport default verify;\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,iBAAiB;AAC7C,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,YAAY,MAAM,0BAA0B;AACnD,MAAMC,MAAM,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,KAAK;EAChD,MAAMC,SAAS,GAAG,MAAMN,YAAY,CAACE,GAAG,EAAEC,GAAG,EAAE,QAAQ,CAAC;EACxDJ,cAAc,CAACG,GAAG,EAAEI,SAAS,CAAC;EAC9B,MAAMC,SAAS,GAAGV,eAAe,CAACK,GAAG,EAAEI,SAAS,CAACC,SAAS,CAAC;EAC3D,IAAI;IACA,OAAO,MAAMT,MAAM,CAACU,MAAM,CAACP,MAAM,CAACM,SAAS,EAAED,SAAS,EAAEF,SAAS,EAAEC,IAAI,CAAC;EAC5E,CAAC,CACD,OAAOI,EAAE,EAAE;IACP,OAAO,KAAK;EAChB;AACJ,CAAC;AACD,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}