{"ast":null,"code":"import { GET_USERS } from \"./action-types\";\nimport axios from 'axios';\nimport { createSelector } from 'reselect';\nexport const getUsers = () => {\n  return function (dispatch) {\n    fetch('users.json').then(response => response.json()).then(data => {\n      const users = data.map(user => ({\n        id: user.login.uuid,\n        name: `${user.name.first} ${user.name.last}`,\n        gender: user.gender,\n        age: user.dob.age,\n        image: user.picture.large,\n        city: user.location.city,\n        email: user.email,\n        username: user.username,\n        birthdate: user.dob.date,\n        number: user.cell\n      }));\n      dispatch({\n        type: GET_USERS,\n        payload: users\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"names":["GET_USERS","axios","createSelector","getUsers","dispatch","fetch","then","response","json","data","users","map","user","id","login","uuid","name","first","last","gender","age","dob","image","picture","large","city","location","email","username","birthdate","date","number","cell","type","payload","catch","error","console","log"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/src/Redux/actions.js"],"sourcesContent":["import { GET_USERS   } from \"./action-types\";\r\nimport axios from 'axios';\r\nimport { createSelector } from 'reselect';\r\n\r\n\r\nexport const getUsers = () => {\r\n  return function (dispatch) {\r\n    fetch('users.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const users = data.map((user) => ({\r\n          id: user.login.uuid,\r\n          name: `${user.name.first} ${user.name.last}`,\r\n          gender: user.gender,\r\n          age: user.dob.age,\r\n          image: user.picture.large,\r\n          city: user.location.city,\r\n          email: user.email,\r\n          username: user.username,\r\n          birthdate: user.dob.date,\r\n          number: user.cell,\r\n        }));\r\n\r\n        dispatch({ type: GET_USERS, payload: users });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n\r\n  "],"mappings":"AAAA,SAASA,SAAS,QAAU,gBAAgB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,UAAU;AAGzC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAO,UAAUC,QAAQ,EAAE;IACzBC,KAAK,CAAC,YAAY,CAAC,CAChBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,KAAK,GAAGD,IAAI,CAACE,GAAG,CAAEC,IAAI,KAAM;QAChCC,EAAE,EAAED,IAAI,CAACE,KAAK,CAACC,IAAI;QACnBC,IAAI,EAAG,GAAEJ,IAAI,CAACI,IAAI,CAACC,KAAM,IAAGL,IAAI,CAACI,IAAI,CAACE,IAAK,EAAC;QAC5CC,MAAM,EAAEP,IAAI,CAACO,MAAM;QACnBC,GAAG,EAAER,IAAI,CAACS,GAAG,CAACD,GAAG;QACjBE,KAAK,EAAEV,IAAI,CAACW,OAAO,CAACC,KAAK;QACzBC,IAAI,EAAEb,IAAI,CAACc,QAAQ,CAACD,IAAI;QACxBE,KAAK,EAAEf,IAAI,CAACe,KAAK;QACjBC,QAAQ,EAAEhB,IAAI,CAACgB,QAAQ;QACvBC,SAAS,EAAEjB,IAAI,CAACS,GAAG,CAACS,IAAI;QACxBC,MAAM,EAAEnB,IAAI,CAACoB;MACf,CAAC,CAAC,CAAC;MAEH5B,QAAQ,CAAC;QAAE6B,IAAI,EAAEjC,SAAS;QAAEkC,OAAO,EAAExB;MAAM,CAAC,CAAC;IAC/C,CAAC,CAAC,CACDyB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}