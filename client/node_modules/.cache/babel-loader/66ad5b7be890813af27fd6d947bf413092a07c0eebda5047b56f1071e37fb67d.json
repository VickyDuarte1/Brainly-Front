{"ast":null,"code":"import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n  checkKeyType(alg, key, 'decrypt');\n  switch (alg) {\n    case 'dir':\n      {\n        if (encryptedKey !== undefined) throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        return key;\n      }\n    case 'ECDH-ES':\n      if (encryptedKey !== undefined) throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n    case 'ECDH-ES+A128KW':\n    case 'ECDH-ES+A192KW':\n    case 'ECDH-ES+A256KW':\n      {\n        if (!isObject(joseHeader.epk)) throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n        if (!ECDH.ecdhAllowed(key)) throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n        const epk = await importJWK(joseHeader.epk, alg);\n        let partyUInfo;\n        let partyVInfo;\n        if (joseHeader.apu !== undefined) {\n          if (typeof joseHeader.apu !== 'string') throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n          partyUInfo = base64url(joseHeader.apu);\n        }\n        if (joseHeader.apv !== undefined) {\n          if (typeof joseHeader.apv !== 'string') throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n          partyVInfo = base64url(joseHeader.apv);\n        }\n        const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n        if (alg === 'ECDH-ES') return sharedSecret;\n        if (encryptedKey === undefined) throw new JWEInvalid('JWE Encrypted Key missing');\n        return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n      }\n    case 'RSA1_5':\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n      {\n        if (encryptedKey === undefined) throw new JWEInvalid('JWE Encrypted Key missing');\n        return rsaEs(alg, key, encryptedKey);\n      }\n    case 'PBES2-HS256+A128KW':\n    case 'PBES2-HS384+A192KW':\n    case 'PBES2-HS512+A256KW':\n      {\n        if (encryptedKey === undefined) throw new JWEInvalid('JWE Encrypted Key missing');\n        if (typeof joseHeader.p2c !== 'number') throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n        const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n        if (joseHeader.p2c > p2cLimit) throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n        if (typeof joseHeader.p2s !== 'string') throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n        return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, base64url(joseHeader.p2s));\n      }\n    case 'A128KW':\n    case 'A192KW':\n    case 'A256KW':\n      {\n        if (encryptedKey === undefined) throw new JWEInvalid('JWE Encrypted Key missing');\n        return aesKw(alg, key, encryptedKey);\n      }\n    case 'A128GCMKW':\n    case 'A192GCMKW':\n    case 'A256GCMKW':\n      {\n        if (encryptedKey === undefined) throw new JWEInvalid('JWE Encrypted Key missing');\n        if (typeof joseHeader.iv !== 'string') throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n        if (typeof joseHeader.tag !== 'string') throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n        const iv = base64url(joseHeader.iv);\n        const tag = base64url(joseHeader.tag);\n        return aesGcmKw(alg, key, encryptedKey, iv, tag);\n      }\n    default:\n      {\n        throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n      }\n  }\n}\nexport default decryptKeyManagement;","map":{"version":3,"names":["unwrap","aesKw","ECDH","decrypt","pbes2Kw","rsaEs","decode","base64url","JOSENotSupported","JWEInvalid","bitLength","cekLength","importJWK","checkKeyType","isObject","aesGcmKw","decryptKeyManagement","alg","key","encryptedKey","joseHeader","options","undefined","epk","ecdhAllowed","partyUInfo","partyVInfo","apu","apv","sharedSecret","deriveKey","enc","parseInt","slice","p2c","p2cLimit","maxPBES2Count","p2s","iv","tag"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/lib/decrypt_key_management.js"],"sourcesContent":["import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    checkKeyType(alg, key, 'decrypt');\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!isObject(joseHeader.epk))\n                throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await importJWK(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                partyUInfo = base64url(joseHeader.apu);\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                partyVInfo = base64url(joseHeader.apv);\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return rsaEs(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n            if (joseHeader.p2c > p2cLimit)\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, base64url(joseHeader.p2s));\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            const iv = base64url(joseHeader.iv);\n            const tag = base64url(joseHeader.tag);\n            return aesGcmKw(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexport default decryptKeyManagement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}