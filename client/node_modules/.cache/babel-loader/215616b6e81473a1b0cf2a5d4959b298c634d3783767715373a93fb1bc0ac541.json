{"ast":null,"code":"import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n  constructor(plaintext) {\n    this._flattened = new FlattenedEncrypt(plaintext);\n  }\n  setContentEncryptionKey(cek) {\n    this._flattened.setContentEncryptionKey(cek);\n    return this;\n  }\n  setInitializationVector(iv) {\n    this._flattened.setInitializationVector(iv);\n    return this;\n  }\n  setProtectedHeader(protectedHeader) {\n    this._flattened.setProtectedHeader(protectedHeader);\n    return this;\n  }\n  setKeyManagementParameters(parameters) {\n    this._flattened.setKeyManagementParameters(parameters);\n    return this;\n  }\n  async encrypt(key, options) {\n    const jwe = await this._flattened.encrypt(key, options);\n    return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n  }\n}","map":{"version":3,"names":["FlattenedEncrypt","CompactEncrypt","constructor","plaintext","_flattened","setContentEncryptionKey","cek","setInitializationVector","iv","setProtectedHeader","protectedHeader","setKeyManagementParameters","parameters","encrypt","key","options","jwe","protected","encrypted_key","ciphertext","tag","join"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/jwe/compact/encrypt.js"],"sourcesContent":["import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAO,MAAMC,cAAc,CAAC;EACxBC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACC,UAAU,GAAG,IAAIJ,gBAAgB,CAACG,SAAS,CAAC;EACrD;EACAE,uBAAuBA,CAACC,GAAG,EAAE;IACzB,IAAI,CAACF,UAAU,CAACC,uBAAuB,CAACC,GAAG,CAAC;IAC5C,OAAO,IAAI;EACf;EACAC,uBAAuBA,CAACC,EAAE,EAAE;IACxB,IAAI,CAACJ,UAAU,CAACG,uBAAuB,CAACC,EAAE,CAAC;IAC3C,OAAO,IAAI;EACf;EACAC,kBAAkBA,CAACC,eAAe,EAAE;IAChC,IAAI,CAACN,UAAU,CAACK,kBAAkB,CAACC,eAAe,CAAC;IACnD,OAAO,IAAI;EACf;EACAC,0BAA0BA,CAACC,UAAU,EAAE;IACnC,IAAI,CAACR,UAAU,CAACO,0BAA0B,CAACC,UAAU,CAAC;IACtD,OAAO,IAAI;EACf;EACA,MAAMC,OAAOA,CAACC,GAAG,EAAEC,OAAO,EAAE;IACxB,MAAMC,GAAG,GAAG,MAAM,IAAI,CAACZ,UAAU,CAACS,OAAO,CAACC,GAAG,EAAEC,OAAO,CAAC;IACvD,OAAO,CAACC,GAAG,CAACC,SAAS,EAAED,GAAG,CAACE,aAAa,EAAEF,GAAG,CAACR,EAAE,EAAEQ,GAAG,CAACG,UAAU,EAAEH,GAAG,CAACI,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EACxF;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}