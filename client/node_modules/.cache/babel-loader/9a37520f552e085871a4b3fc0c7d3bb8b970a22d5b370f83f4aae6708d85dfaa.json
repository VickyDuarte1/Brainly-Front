{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rama_\\\\Desktop\\\\vicky uni\\\\Henrry Prep Course\\\\otrom2\\\\Brainly-Front\\\\client\\\\src\\\\Components\\\\Premium\\\\Premium.jsx\";\nimport React from 'react';\nimport MercadoPago from 'https://sdk.mercadopago.com/js/v2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Premium = () => {\n  const mp = new MercadoPago('YOUR_PUBLIC_KEY', {\n    locale: 'es'\n  });\n  const bricksBuilder = mp.bricks();\n  const renderCardPaymentBrick = async bricksBuilder => {\n    const settings = {\n      initialization: {\n        amount: 100,\n        // monto a ser pago\n        payer: {\n          email: \"\"\n        }\n      },\n      customization: {\n        visual: {\n          style: {\n            theme: 'default' // | 'dark' | 'bootstrap' | 'flat'\n          }\n        }\n      },\n\n      callbacks: {\n        onReady: () => {\n          // callback llamado cuando Brick esté listo\n        },\n        onSubmit: cardFormData => {\n          //  callback llamado cuando el usuario haga clic en el botón enviar los datos\n          //  ejemplo de envío de los datos recolectados por el Brick a su servidor\n          return new Promise((resolve, reject) => {\n            fetch(\"/process_payment\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(cardFormData)\n            }).then(response => {\n              // recibir el resultado del pago\n              resolve();\n            }).catch(error => {\n              // tratar respuesta de error al intentar crear el pago\n              reject();\n            });\n          });\n        },\n        onError: error => {\n          // callback llamado para todos los casos de error de Brick\n        }\n      }\n    };\n    window.cardPaymentBrickController = await bricksBuilder.create('cardPayment', 'cardPaymentBrick_container', settings);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 1\n  }, this);\n};\n_c = Premium;\nexport default Premium;\nvar _c;\n$RefreshReg$(_c, \"Premium\");","map":{"version":3,"names":["React","MercadoPago","jsxDEV","_jsxDEV","Premium","mp","locale","bricksBuilder","bricks","renderCardPaymentBrick","settings","initialization","amount","payer","email","customization","visual","style","theme","callbacks","onReady","onSubmit","cardFormData","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","response","catch","error","onError","window","cardPaymentBrickController","create","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/src/Components/Premium/Premium.jsx"],"sourcesContent":["import React from 'react';\r\nimport MercadoPago from 'https://sdk.mercadopago.com/js/v2';\r\n\r\nconst Premium=()=>{\r\n   \r\n    const mp = new MercadoPago('YOUR_PUBLIC_KEY', {\r\n        locale: 'es'\r\n      });\r\n      const bricksBuilder = mp.bricks();\r\n\r\n      const renderCardPaymentBrick = async (bricksBuilder) => {\r\n        const settings = {\r\n          initialization: {\r\n            amount: 100, // monto a ser pago\r\n            payer: {\r\n              email: \"\",\r\n            },\r\n          },\r\n          customization: {\r\n            visual: {\r\n              style: {\r\n                theme: 'default', // | 'dark' | 'bootstrap' | 'flat'\r\n              }\r\n            },\r\n          },\r\n          callbacks: {\r\n            onReady: () => {\r\n              // callback llamado cuando Brick esté listo\r\n            },\r\n            onSubmit: (cardFormData) => {\r\n              //  callback llamado cuando el usuario haga clic en el botón enviar los datos\r\n              //  ejemplo de envío de los datos recolectados por el Brick a su servidor\r\n              return new Promise((resolve, reject) => {\r\n                fetch(\"/process_payment\", {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                  },\r\n                  body: JSON.stringify(cardFormData)\r\n                })\r\n                  .then((response) => {\r\n                    // recibir el resultado del pago\r\n                    resolve();\r\n                  })\r\n                  .catch((error) => {\r\n                    // tratar respuesta de error al intentar crear el pago\r\n                    reject();\r\n                  })\r\n              });\r\n            },\r\n            onError: (error) => {\r\n              // callback llamado para todos los casos de error de Brick\r\n            },\r\n          },\r\n        };\r\n        window.cardPaymentBrickController = await bricksBuilder.create('cardPayment', 'cardPaymentBrick_container', settings);\r\n      };\r\n\r\n    return (\r\n\r\n\r\n<div>\r\n{/* renderCardPaymentBrick(bricksBuilder); */}\r\n</div>\r\n\r\n    )\r\n}\r\n\r\nexport default Premium;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,OAAO,GAACA,CAAA,KAAI;EAEd,MAAMC,EAAE,GAAG,IAAIJ,WAAW,CAAC,iBAAiB,EAAE;IAC1CK,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGF,EAAE,CAACG,MAAM,EAAE;EAEjC,MAAMC,sBAAsB,GAAG,MAAOF,aAAa,IAAK;IACtD,MAAMG,QAAQ,GAAG;MACfC,cAAc,EAAE;QACdC,MAAM,EAAE,GAAG;QAAE;QACbC,KAAK,EAAE;UACLC,KAAK,EAAE;QACT;MACF,CAAC;MACDC,aAAa,EAAE;QACbC,MAAM,EAAE;UACNC,KAAK,EAAE;YACLC,KAAK,EAAE,SAAS,CAAE;UACpB;QACF;MACF,CAAC;;MACDC,SAAS,EAAE;QACTC,OAAO,EAAEA,CAAA,KAAM;UACb;QAAA,CACD;QACDC,QAAQ,EAAGC,YAAY,IAAK;UAC1B;UACA;UACA,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;YACtCC,KAAK,CAAC,kBAAkB,EAAE;cACxBC,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,YAAY;YACnC,CAAC,CAAC,CACCU,IAAI,CAAEC,QAAQ,IAAK;cAClB;cACAT,OAAO,EAAE;YACX,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAK;cAChB;cACAV,MAAM,EAAE;YACV,CAAC,CAAC;UACN,CAAC,CAAC;QACJ,CAAC;QACDW,OAAO,EAAGD,KAAK,IAAK;UAClB;QAAA;MAEJ;IACF,CAAC;IACDE,MAAM,CAACC,0BAA0B,GAAG,MAAM/B,aAAa,CAACgC,MAAM,CAAC,aAAa,EAAE,4BAA4B,EAAE7B,QAAQ,CAAC;EACvH,CAAC;EAEH,oBAGJP,OAAA;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEM;AAGN,CAAC;AAAAC,EAAA,GA/DKxC,OAAO;AAiEb,eAAeA,OAAO;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}