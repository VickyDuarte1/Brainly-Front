{"ast":null,"code":"import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n  const cryptoKey = await getSignKey(alg, key, 'sign');\n  checkKeyLength(alg, cryptoKey);\n  const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n  return new Uint8Array(signature);\n};\nexport default sign;","map":{"version":3,"names":["subtleAlgorithm","crypto","checkKeyLength","getSignKey","sign","alg","key","data","cryptoKey","signature","subtle","algorithm","Uint8Array"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/runtime/sign.js"],"sourcesContent":["import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\nexport default sign;\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,iBAAiB;AAC7C,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,MAAMC,IAAI,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EACnC,MAAMC,SAAS,GAAG,MAAML,UAAU,CAACE,GAAG,EAAEC,GAAG,EAAE,MAAM,CAAC;EACpDJ,cAAc,CAACG,GAAG,EAAEG,SAAS,CAAC;EAC9B,MAAMC,SAAS,GAAG,MAAMR,MAAM,CAACS,MAAM,CAACN,IAAI,CAACJ,eAAe,CAACK,GAAG,EAAEG,SAAS,CAACG,SAAS,CAAC,EAAEH,SAAS,EAAED,IAAI,CAAC;EACtG,OAAO,IAAIK,UAAU,CAACH,SAAS,CAAC;AACpC,CAAC;AACD,eAAeL,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}