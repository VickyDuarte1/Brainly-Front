{"ast":null,"code":"import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { inflate } from '../../runtime/zlib.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n  var _a;\n  if (!isObject(jwe)) {\n    throw new JWEInvalid('Flattened JWE must be an object');\n  }\n  if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n    throw new JWEInvalid('JOSE Header missing');\n  }\n  if (typeof jwe.iv !== 'string') {\n    throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n  }\n  if (typeof jwe.ciphertext !== 'string') {\n    throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n  }\n  if (typeof jwe.tag !== 'string') {\n    throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n  }\n  if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n    throw new JWEInvalid('JWE Protected Header incorrect type');\n  }\n  if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n    throw new JWEInvalid('JWE Encrypted Key incorrect type');\n  }\n  if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n    throw new JWEInvalid('JWE AAD incorrect type');\n  }\n  if (jwe.header !== undefined && !isObject(jwe.header)) {\n    throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n  }\n  if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n    throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n  }\n  let parsedProt;\n  if (jwe.protected) {\n    try {\n      const protectedHeader = base64url(jwe.protected);\n      parsedProt = JSON.parse(decoder.decode(protectedHeader));\n    } catch (_b) {\n      throw new JWEInvalid('JWE Protected Header is invalid');\n    }\n  }\n  if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n    throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n  }\n  const joseHeader = {\n    ...parsedProt,\n    ...jwe.header,\n    ...jwe.unprotected\n  };\n  validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n  if (joseHeader.zip !== undefined) {\n    if (!parsedProt || !parsedProt.zip) {\n      throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n    }\n    if (joseHeader.zip !== 'DEF') {\n      throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n    }\n  }\n  const {\n    alg,\n    enc\n  } = joseHeader;\n  if (typeof alg !== 'string' || !alg) {\n    throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n  }\n  if (typeof enc !== 'string' || !enc) {\n    throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n  }\n  const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n  const contentEncryptionAlgorithms = options && validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n  if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n    throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n  }\n  if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n    throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n  }\n  let encryptedKey;\n  if (jwe.encrypted_key !== undefined) {\n    encryptedKey = base64url(jwe.encrypted_key);\n  }\n  let resolvedKey = false;\n  if (typeof key === 'function') {\n    key = await key(parsedProt, jwe);\n    resolvedKey = true;\n  }\n  let cek;\n  try {\n    cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n  } catch (err) {\n    if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\n      throw err;\n    }\n    cek = generateCek(enc);\n  }\n  const iv = base64url(jwe.iv);\n  const tag = base64url(jwe.tag);\n  const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n  let additionalData;\n  if (jwe.aad !== undefined) {\n    additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n  } else {\n    additionalData = protectedHeader;\n  }\n  let plaintext = await decrypt(enc, cek, base64url(jwe.ciphertext), iv, tag, additionalData);\n  if (joseHeader.zip === 'DEF') {\n    plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n  }\n  const result = {\n    plaintext\n  };\n  if (jwe.protected !== undefined) {\n    result.protectedHeader = parsedProt;\n  }\n  if (jwe.aad !== undefined) {\n    result.additionalAuthenticatedData = base64url(jwe.aad);\n  }\n  if (jwe.unprotected !== undefined) {\n    result.sharedUnprotectedHeader = jwe.unprotected;\n  }\n  if (jwe.header !== undefined) {\n    result.unprotectedHeader = jwe.header;\n  }\n  if (resolvedKey) {\n    return {\n      ...result,\n      key\n    };\n  }\n  return result;\n}","map":{"version":3,"names":["decode","base64url","decrypt","inflate","JOSEAlgNotAllowed","JOSENotSupported","JWEInvalid","isDisjoint","isObject","decryptKeyManagement","encoder","decoder","concat","generateCek","validateCrit","validateAlgorithms","flattenedDecrypt","jwe","key","options","_a","protected","undefined","header","unprotected","iv","ciphertext","tag","encrypted_key","aad","parsedProt","protectedHeader","JSON","parse","_b","joseHeader","Map","crit","zip","alg","enc","keyManagementAlgorithms","contentEncryptionAlgorithms","has","encryptedKey","resolvedKey","cek","err","TypeError","encode","additionalData","plaintext","inflateRaw","result","additionalAuthenticatedData","sharedUnprotectedHeader","unprotectedHeader"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/jwe/flattened/decrypt.js"],"sourcesContent":["import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { inflate } from '../../runtime/zlib.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = base64url(jwe.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== 'DEF') {\n            throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        encryptedKey = base64url(jwe.encrypted_key);\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n    }\n    catch (err) {\n        if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\n            throw err;\n        }\n        cek = generateCek(enc);\n    }\n    const iv = base64url(jwe.iv);\n    const tag = base64url(jwe.tag);\n    const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let plaintext = await decrypt(enc, cek, base64url(jwe.ciphertext), iv, tag, additionalData);\n    if (joseHeader.zip === 'DEF') {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n    }\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        result.additionalAuthenticatedData = base64url(jwe.aad);\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}