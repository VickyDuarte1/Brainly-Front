{"ast":null,"code":"import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n  if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n    throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n  }\n  if (!protectedHeader || protectedHeader.crit === undefined) {\n    return new Set();\n  }\n  if (!Array.isArray(protectedHeader.crit) || protectedHeader.crit.length === 0 || protectedHeader.crit.some(input => typeof input !== 'string' || input.length === 0)) {\n    throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n  }\n  let recognized;\n  if (recognizedOption !== undefined) {\n    recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n  } else {\n    recognized = recognizedDefault;\n  }\n  for (const parameter of protectedHeader.crit) {\n    if (!recognized.has(parameter)) {\n      throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n    }\n    if (joseHeader[parameter] === undefined) {\n      throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n    } else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n      throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n    }\n  }\n  return new Set(protectedHeader.crit);\n}\nexport default validateCrit;","map":{"version":3,"names":["JOSENotSupported","validateCrit","Err","recognizedDefault","recognizedOption","protectedHeader","joseHeader","crit","undefined","Set","Array","isArray","length","some","input","recognized","Map","Object","entries","parameter","has","get"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/lib/validate_crit.js"],"sourcesContent":["import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,mBAAmB;AACpD,SAASC,YAAYA,CAACC,GAAG,EAAEC,iBAAiB,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,UAAU,EAAE;EACzF,IAAIA,UAAU,CAACC,IAAI,KAAKC,SAAS,IAAIH,eAAe,CAACE,IAAI,KAAKC,SAAS,EAAE;IACrE,MAAM,IAAIN,GAAG,CAAC,gEAAgE,CAAC;EACnF;EACA,IAAI,CAACG,eAAe,IAAIA,eAAe,CAACE,IAAI,KAAKC,SAAS,EAAE;IACxD,OAAO,IAAIC,GAAG,EAAE;EACpB;EACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACN,eAAe,CAACE,IAAI,CAAC,IACpCF,eAAe,CAACE,IAAI,CAACK,MAAM,KAAK,CAAC,IACjCP,eAAe,CAACE,IAAI,CAACM,IAAI,CAAEC,KAAK,IAAK,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACF,MAAM,KAAK,CAAC,CAAC,EAAE;IACvF,MAAM,IAAIV,GAAG,CAAC,uFAAuF,CAAC;EAC1G;EACA,IAAIa,UAAU;EACd,IAAIX,gBAAgB,KAAKI,SAAS,EAAE;IAChCO,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAGC,MAAM,CAACC,OAAO,CAACd,gBAAgB,CAAC,EAAE,GAAGD,iBAAiB,CAACe,OAAO,EAAE,CAAC,CAAC;EAC/F,CAAC,MACI;IACDH,UAAU,GAAGZ,iBAAiB;EAClC;EACA,KAAK,MAAMgB,SAAS,IAAId,eAAe,CAACE,IAAI,EAAE;IAC1C,IAAI,CAACQ,UAAU,CAACK,GAAG,CAACD,SAAS,CAAC,EAAE;MAC5B,MAAM,IAAInB,gBAAgB,CAAE,+BAA8BmB,SAAU,qBAAoB,CAAC;IAC7F;IACA,IAAIb,UAAU,CAACa,SAAS,CAAC,KAAKX,SAAS,EAAE;MACrC,MAAM,IAAIN,GAAG,CAAE,+BAA8BiB,SAAU,cAAa,CAAC;IACzE,CAAC,MACI,IAAIJ,UAAU,CAACM,GAAG,CAACF,SAAS,CAAC,IAAId,eAAe,CAACc,SAAS,CAAC,KAAKX,SAAS,EAAE;MAC5E,MAAM,IAAIN,GAAG,CAAE,+BAA8BiB,SAAU,+BAA8B,CAAC;IAC1F;EACJ;EACA,OAAO,IAAIV,GAAG,CAACJ,eAAe,CAACE,IAAI,CAAC;AACxC;AACA,eAAeN,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}