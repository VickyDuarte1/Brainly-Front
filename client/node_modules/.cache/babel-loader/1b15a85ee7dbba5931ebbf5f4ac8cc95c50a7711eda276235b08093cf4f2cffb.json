{"ast":null,"code":"const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexport default (str => {\n  const matched = REGEX.exec(str);\n  if (!matched) {\n    throw new TypeError('Invalid time period format');\n  }\n  const value = parseFloat(matched[1]);\n  const unit = matched[2].toLowerCase();\n  switch (unit) {\n    case 'sec':\n    case 'secs':\n    case 'second':\n    case 'seconds':\n    case 's':\n      return Math.round(value);\n    case 'minute':\n    case 'minutes':\n    case 'min':\n    case 'mins':\n    case 'm':\n      return Math.round(value * minute);\n    case 'hour':\n    case 'hours':\n    case 'hr':\n    case 'hrs':\n    case 'h':\n      return Math.round(value * hour);\n    case 'day':\n    case 'days':\n    case 'd':\n      return Math.round(value * day);\n    case 'week':\n    case 'weeks':\n    case 'w':\n      return Math.round(value * week);\n    default:\n      return Math.round(value * year);\n  }\n});","map":{"version":3,"names":["minute","hour","day","week","year","REGEX","str","matched","exec","TypeError","value","parseFloat","unit","toLowerCase","Math","round"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/lib/secs.js"],"sourcesContent":["const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            return Math.round(value);\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            return Math.round(value * minute);\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            return Math.round(value * hour);\n        case 'day':\n        case 'days':\n        case 'd':\n            return Math.round(value * day);\n        case 'week':\n        case 'weeks':\n        case 'w':\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,EAAE;AACjB,MAAMC,IAAI,GAAGD,MAAM,GAAG,EAAE;AACxB,MAAME,GAAG,GAAGD,IAAI,GAAG,EAAE;AACrB,MAAME,IAAI,GAAGD,GAAG,GAAG,CAAC;AACpB,MAAME,IAAI,GAAGF,GAAG,GAAG,MAAM;AACzB,MAAMG,KAAK,GAAG,qGAAqG;AACnH,gBAAgBC,GAAG,IAAK;EACpB,MAAMC,OAAO,GAAGF,KAAK,CAACG,IAAI,CAACF,GAAG,CAAC;EAC/B,IAAI,CAACC,OAAO,EAAE;IACV,MAAM,IAAIE,SAAS,CAAC,4BAA4B,CAAC;EACrD;EACA,MAAMC,KAAK,GAAGC,UAAU,CAACJ,OAAO,CAAC,CAAC,CAAC,CAAC;EACpC,MAAMK,IAAI,GAAGL,OAAO,CAAC,CAAC,CAAC,CAACM,WAAW,EAAE;EACrC,QAAQD,IAAI;IACR,KAAK,KAAK;IACV,KAAK,MAAM;IACX,KAAK,QAAQ;IACb,KAAK,SAAS;IACd,KAAK,GAAG;MACJ,OAAOE,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC;IAC5B,KAAK,QAAQ;IACb,KAAK,SAAS;IACd,KAAK,KAAK;IACV,KAAK,MAAM;IACX,KAAK,GAAG;MACJ,OAAOI,IAAI,CAACC,KAAK,CAACL,KAAK,GAAGV,MAAM,CAAC;IACrC,KAAK,MAAM;IACX,KAAK,OAAO;IACZ,KAAK,IAAI;IACT,KAAK,KAAK;IACV,KAAK,GAAG;MACJ,OAAOc,IAAI,CAACC,KAAK,CAACL,KAAK,GAAGT,IAAI,CAAC;IACnC,KAAK,KAAK;IACV,KAAK,MAAM;IACX,KAAK,GAAG;MACJ,OAAOa,IAAI,CAACC,KAAK,CAACL,KAAK,GAAGR,GAAG,CAAC;IAClC,KAAK,MAAM;IACX,KAAK,OAAO;IACZ,KAAK,GAAG;MACJ,OAAOY,IAAI,CAACC,KAAK,CAACL,KAAK,GAAGP,IAAI,CAAC;IACnC;MACI,OAAOW,IAAI,CAACC,KAAK,CAACL,KAAK,GAAGN,IAAI,CAAC;EAAC;AAE5C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}