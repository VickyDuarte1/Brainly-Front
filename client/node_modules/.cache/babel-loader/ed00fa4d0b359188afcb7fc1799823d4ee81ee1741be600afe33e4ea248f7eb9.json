{"ast":null,"code":"import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = input => {\n  let unencoded = input;\n  if (typeof unencoded === 'string') {\n    unencoded = encoder.encode(unencoded);\n  }\n  const CHUNK_SIZE = 0x8000;\n  const arr = [];\n  for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n    arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n  }\n  return btoa(arr.join(''));\n};\nexport const encode = input => {\n  return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = encoded => {\n  const binary = atob(encoded);\n  const bytes = new Uint8Array(binary.length);\n  for (let i = 0; i < binary.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n  return bytes;\n};\nexport const decode = input => {\n  let encoded = input;\n  if (encoded instanceof Uint8Array) {\n    encoded = decoder.decode(encoded);\n  }\n  encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n  try {\n    return decodeBase64(encoded);\n  } catch (_a) {\n    throw new TypeError('The input to be decoded is not correctly encoded.');\n  }\n};","map":{"version":3,"names":["encoder","decoder","encodeBase64","input","unencoded","encode","CHUNK_SIZE","arr","i","length","push","String","fromCharCode","apply","subarray","btoa","join","replace","decodeBase64","encoded","binary","atob","bytes","Uint8Array","charCodeAt","decode","_a","TypeError"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/runtime/base64url.js"],"sourcesContent":["import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,QAAQ,wBAAwB;AACzD,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACnC,IAAIC,SAAS,GAAGD,KAAK;EACrB,IAAI,OAAOC,SAAS,KAAK,QAAQ,EAAE;IAC/BA,SAAS,GAAGJ,OAAO,CAACK,MAAM,CAACD,SAAS,CAAC;EACzC;EACA,MAAME,UAAU,GAAG,MAAM;EACzB,MAAMC,GAAG,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,CAACK,MAAM,EAAED,CAAC,IAAIF,UAAU,EAAE;IACnDC,GAAG,CAACG,IAAI,CAACC,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAET,SAAS,CAACU,QAAQ,CAACN,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAAC,CAAC,CAAC;EACpF;EACA,OAAOS,IAAI,CAACR,GAAG,CAACS,IAAI,CAAC,EAAE,CAAC,CAAC;AAC7B,CAAC;AACD,OAAO,MAAMX,MAAM,GAAIF,KAAK,IAAK;EAC7B,OAAOD,YAAY,CAACC,KAAK,CAAC,CAACc,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;AACxF,CAAC;AACD,OAAO,MAAMC,YAAY,GAAIC,OAAO,IAAK;EACrC,MAAMC,MAAM,GAAGC,IAAI,CAACF,OAAO,CAAC;EAC5B,MAAMG,KAAK,GAAG,IAAIC,UAAU,CAACH,MAAM,CAACX,MAAM,CAAC;EAC3C,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,MAAM,CAACX,MAAM,EAAED,CAAC,EAAE,EAAE;IACpCc,KAAK,CAACd,CAAC,CAAC,GAAGY,MAAM,CAACI,UAAU,CAAChB,CAAC,CAAC;EACnC;EACA,OAAOc,KAAK;AAChB,CAAC;AACD,OAAO,MAAMG,MAAM,GAAItB,KAAK,IAAK;EAC7B,IAAIgB,OAAO,GAAGhB,KAAK;EACnB,IAAIgB,OAAO,YAAYI,UAAU,EAAE;IAC/BJ,OAAO,GAAGlB,OAAO,CAACwB,MAAM,CAACN,OAAO,CAAC;EACrC;EACAA,OAAO,GAAGA,OAAO,CAACF,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAC1E,IAAI;IACA,OAAOC,YAAY,CAACC,OAAO,CAAC;EAChC,CAAC,CACD,OAAOO,EAAE,EAAE;IACP,MAAM,IAAIC,SAAS,CAAC,mDAAmD,CAAC;EAC5E;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}