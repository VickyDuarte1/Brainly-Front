{"ast":null,"code":"// import React from 'react';\n// import MercadoPago from 'https://sdk.mercadopago.com/js/v2';\n\n// const Premium=()=>{\n\n//     const mp = new MercadoPago('YOUR_PUBLIC_KEY', {\n//         locale: 'es'\n//       });\n//       const bricksBuilder = mp.bricks();\n\n//       const renderCardPaymentBrick = async (bricksBuilder) => {\n//         const settings = {\n//           initialization: {\n//             amount: 100, // monto a ser pago\n//             payer: {\n//               email: \"\",\n//             },\n//           },\n//           customization: {\n//             visual: {\n//               style: {\n//                 theme: 'default', // | 'dark' | 'bootstrap' | 'flat'\n//               }\n//             },\n//           },\n//           callbacks: {\n//             onReady: () => {\n//               // callback llamado cuando Brick esté listo\n//             },\n//             onSubmit: (cardFormData) => {\n//               //  callback llamado cuando el usuario haga clic en el botón enviar los datos\n//               //  ejemplo de envío de los datos recolectados por el Brick a su servidor\n//               return new Promise((resolve, reject) => {\n//                 fetch(\"/process_payment\", {\n//                   method: \"POST\",\n//                   headers: {\n//                     \"Content-Type\": \"application/json\",\n//                   },\n//                   body: JSON.stringify(cardFormData)\n//                 })\n//                   .then((response) => {\n//                     // recibir el resultado del pago\n//                     resolve();\n//                   })\n//                   .catch((error) => {\n//                     // tratar respuesta de error al intentar crear el pago\n//                     reject();\n//                   })\n//               });\n//             },\n//             onError: (error) => {\n//               // callback llamado para todos los casos de error de Brick\n//             },\n//           },\n//         };\n//         window.cardPaymentBrickController = await bricksBuilder.create('cardPayment', 'cardPaymentBrick_container', settings);\n//       };\n\n//     return (\n\n// <div>\n// renderCardPaymentBrick(bricksBuilder);\n// </div>\n\n//     )\n// }\n\n// export default Premium;","map":{"version":3,"names":[],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/src/Components/Premium/Premium.jsx"],"sourcesContent":["// import React from 'react';\r\n// import MercadoPago from 'https://sdk.mercadopago.com/js/v2';\r\n\r\n// const Premium=()=>{\r\n   \r\n//     const mp = new MercadoPago('YOUR_PUBLIC_KEY', {\r\n//         locale: 'es'\r\n//       });\r\n//       const bricksBuilder = mp.bricks();\r\n\r\n//       const renderCardPaymentBrick = async (bricksBuilder) => {\r\n//         const settings = {\r\n//           initialization: {\r\n//             amount: 100, // monto a ser pago\r\n//             payer: {\r\n//               email: \"\",\r\n//             },\r\n//           },\r\n//           customization: {\r\n//             visual: {\r\n//               style: {\r\n//                 theme: 'default', // | 'dark' | 'bootstrap' | 'flat'\r\n//               }\r\n//             },\r\n//           },\r\n//           callbacks: {\r\n//             onReady: () => {\r\n//               // callback llamado cuando Brick esté listo\r\n//             },\r\n//             onSubmit: (cardFormData) => {\r\n//               //  callback llamado cuando el usuario haga clic en el botón enviar los datos\r\n//               //  ejemplo de envío de los datos recolectados por el Brick a su servidor\r\n//               return new Promise((resolve, reject) => {\r\n//                 fetch(\"/process_payment\", {\r\n//                   method: \"POST\",\r\n//                   headers: {\r\n//                     \"Content-Type\": \"application/json\",\r\n//                   },\r\n//                   body: JSON.stringify(cardFormData)\r\n//                 })\r\n//                   .then((response) => {\r\n//                     // recibir el resultado del pago\r\n//                     resolve();\r\n//                   })\r\n//                   .catch((error) => {\r\n//                     // tratar respuesta de error al intentar crear el pago\r\n//                     reject();\r\n//                   })\r\n//               });\r\n//             },\r\n//             onError: (error) => {\r\n//               // callback llamado para todos los casos de error de Brick\r\n//             },\r\n//           },\r\n//         };\r\n//         window.cardPaymentBrickController = await bricksBuilder.create('cardPayment', 'cardPaymentBrick_container', settings);\r\n//       };\r\n\r\n//     return (\r\n\r\n\r\n// <div>\r\n// renderCardPaymentBrick(bricksBuilder);\r\n// </div>\r\n\r\n//     )\r\n// }\r\n\r\n// export default Premium;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}