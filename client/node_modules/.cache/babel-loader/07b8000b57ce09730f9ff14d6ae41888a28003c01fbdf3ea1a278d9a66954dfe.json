{"ast":null,"code":"import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n  const decrypted = await compactDecrypt(jwt, key, options);\n  const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n  const {\n    protectedHeader\n  } = decrypted;\n  if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n    throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n  }\n  if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n    throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n  }\n  if (protectedHeader.aud !== undefined && JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n    throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n  }\n  const result = {\n    payload,\n    protectedHeader\n  };\n  if (typeof key === 'function') {\n    return {\n      ...result,\n      key: decrypted.key\n    };\n  }\n  return result;\n}","map":{"version":3,"names":["compactDecrypt","jwtPayload","JWTClaimValidationFailed","jwtDecrypt","jwt","key","options","decrypted","payload","protectedHeader","plaintext","iss","undefined","sub","aud","JSON","stringify","result"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/jwt/decrypt.js"],"sourcesContent":["import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n    const decrypted = await compactDecrypt(jwt, key, options);\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,2BAA2B;AAC1D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,wBAAwB,QAAQ,mBAAmB;AAC5D,OAAO,eAAeC,UAAUA,CAACC,GAAG,EAAEC,GAAG,EAAEC,OAAO,EAAE;EAChD,MAAMC,SAAS,GAAG,MAAMP,cAAc,CAACI,GAAG,EAAEC,GAAG,EAAEC,OAAO,CAAC;EACzD,MAAME,OAAO,GAAGP,UAAU,CAACM,SAAS,CAACE,eAAe,EAAEF,SAAS,CAACG,SAAS,EAAEJ,OAAO,CAAC;EACnF,MAAM;IAAEG;EAAgB,CAAC,GAAGF,SAAS;EACrC,IAAIE,eAAe,CAACE,GAAG,KAAKC,SAAS,IAAIH,eAAe,CAACE,GAAG,KAAKH,OAAO,CAACG,GAAG,EAAE;IAC1E,MAAM,IAAIT,wBAAwB,CAAC,kDAAkD,EAAE,KAAK,EAAE,UAAU,CAAC;EAC7G;EACA,IAAIO,eAAe,CAACI,GAAG,KAAKD,SAAS,IAAIH,eAAe,CAACI,GAAG,KAAKL,OAAO,CAACK,GAAG,EAAE;IAC1E,MAAM,IAAIX,wBAAwB,CAAC,kDAAkD,EAAE,KAAK,EAAE,UAAU,CAAC;EAC7G;EACA,IAAIO,eAAe,CAACK,GAAG,KAAKF,SAAS,IACjCG,IAAI,CAACC,SAAS,CAACP,eAAe,CAACK,GAAG,CAAC,KAAKC,IAAI,CAACC,SAAS,CAACR,OAAO,CAACM,GAAG,CAAC,EAAE;IACrE,MAAM,IAAIZ,wBAAwB,CAAC,kDAAkD,EAAE,KAAK,EAAE,UAAU,CAAC;EAC7G;EACA,MAAMe,MAAM,GAAG;IAAET,OAAO;IAAEC;EAAgB,CAAC;EAC3C,IAAI,OAAOJ,GAAG,KAAK,UAAU,EAAE;IAC3B,OAAO;MAAE,GAAGY,MAAM;MAAEZ,GAAG,EAAEE,SAAS,CAACF;IAAI,CAAC;EAC5C;EACA,OAAOY,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}