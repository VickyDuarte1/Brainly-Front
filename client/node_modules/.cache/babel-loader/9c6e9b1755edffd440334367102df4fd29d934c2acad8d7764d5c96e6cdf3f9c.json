{"ast":null,"code":"import * as base64url from '../runtime/base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { ProduceJWT } from './produce.js';\nexport class UnsecuredJWT extends ProduceJWT {\n  encode() {\n    const header = base64url.encode(JSON.stringify({\n      alg: 'none'\n    }));\n    const payload = base64url.encode(JSON.stringify(this._payload));\n    return `${header}.${payload}.`;\n  }\n  static decode(jwt, options) {\n    if (typeof jwt !== 'string') {\n      throw new JWTInvalid('Unsecured JWT must be a string');\n    }\n    const {\n      0: encodedHeader,\n      1: encodedPayload,\n      2: signature,\n      length\n    } = jwt.split('.');\n    if (length !== 3 || signature !== '') {\n      throw new JWTInvalid('Invalid Unsecured JWT');\n    }\n    let header;\n    try {\n      header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\n      if (header.alg !== 'none') throw new Error();\n    } catch (_a) {\n      throw new JWTInvalid('Invalid Unsecured JWT');\n    }\n    const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\n    return {\n      payload,\n      header\n    };\n  }\n}","map":{"version":3,"names":["base64url","decoder","JWTInvalid","jwtPayload","ProduceJWT","UnsecuredJWT","encode","header","JSON","stringify","alg","payload","_payload","decode","jwt","options","encodedHeader","encodedPayload","signature","length","split","parse","Error","_a"],"sources":["C:/Users/rama_/Desktop/vicky uni/Henrry Prep Course/otrom2/Brainly-Front/client/node_modules/jose/dist/browser/jwt/unsecured.js"],"sourcesContent":["import * as base64url from '../runtime/base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { ProduceJWT } from './produce.js';\nexport class UnsecuredJWT extends ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch (_a) {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\n        return { payload, header };\n    }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,SAAS,MAAM,yBAAyB;AACpD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAO,MAAMC,YAAY,SAASD,UAAU,CAAC;EACzCE,MAAMA,CAAA,EAAG;IACL,MAAMC,MAAM,GAAGP,SAAS,CAACM,MAAM,CAACE,IAAI,CAACC,SAAS,CAAC;MAAEC,GAAG,EAAE;IAAO,CAAC,CAAC,CAAC;IAChE,MAAMC,OAAO,GAAGX,SAAS,CAACM,MAAM,CAACE,IAAI,CAACC,SAAS,CAAC,IAAI,CAACG,QAAQ,CAAC,CAAC;IAC/D,OAAQ,GAAEL,MAAO,IAAGI,OAAQ,GAAE;EAClC;EACA,OAAOE,MAAMA,CAACC,GAAG,EAAEC,OAAO,EAAE;IACxB,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;MACzB,MAAM,IAAIZ,UAAU,CAAC,gCAAgC,CAAC;IAC1D;IACA,MAAM;MAAE,CAAC,EAAEc,aAAa;MAAE,CAAC,EAAEC,cAAc;MAAE,CAAC,EAAEC,SAAS;MAAEC;IAAO,CAAC,GAAGL,GAAG,CAACM,KAAK,CAAC,GAAG,CAAC;IACpF,IAAID,MAAM,KAAK,CAAC,IAAID,SAAS,KAAK,EAAE,EAAE;MAClC,MAAM,IAAIhB,UAAU,CAAC,uBAAuB,CAAC;IACjD;IACA,IAAIK,MAAM;IACV,IAAI;MACAA,MAAM,GAAGC,IAAI,CAACa,KAAK,CAACpB,OAAO,CAACY,MAAM,CAACb,SAAS,CAACa,MAAM,CAACG,aAAa,CAAC,CAAC,CAAC;MACpE,IAAIT,MAAM,CAACG,GAAG,KAAK,MAAM,EACrB,MAAM,IAAIY,KAAK,EAAE;IACzB,CAAC,CACD,OAAOC,EAAE,EAAE;MACP,MAAM,IAAIrB,UAAU,CAAC,uBAAuB,CAAC;IACjD;IACA,MAAMS,OAAO,GAAGR,UAAU,CAACI,MAAM,EAAEP,SAAS,CAACa,MAAM,CAACI,cAAc,CAAC,EAAEF,OAAO,CAAC;IAC7E,OAAO;MAAEJ,OAAO;MAAEJ;IAAO,CAAC;EAC9B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}